// ==========================================================================
// N-UP LAYOUT (3-up, 4-up etc)
// ==========================================================================
//
// Control clearing when grid classes used for multiline grids of items, with
// differing numbers of items per line at different breakpoints
//


/*doc
---
title: Up
name: 4_up
category: layout
---

`.up-*` layout helper classes allow fine control of float clearing, and are used
when grid classes used for multiline grids of items, with differing numbers of
items per line at different breakpoints.

It should typically be applied to the `.g` grid wrapper, but is not grid specific.
The available classes are:

* `.up-1`
* `.up-2--medium`: 2 columns at small
* `.up-3--medium`: 3 columns at medium
* `.up-3--large`: 3 columns at large
* `.up-4--large`: 4 columns at large

If we find we need more splits / breakpoints, this component will need refactoring to
generate classes procedurally.

**NB** this module handles clearing only: to handle item widths use [the grid][2_grid]

```html_example
<div class="g up-1 up-2--medium up-3--large">
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x700" alt="">
        </div>
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x500" alt="">
        </div>
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x500" alt="">
        </div>
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x300" alt="">
        </div>
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x500" alt="">
        </div>
        <div class="g__col g__col--6--medium g__col--4--large cell">
            <img src="http://placehold.it/700x800" alt="">
        </div>
    </div>
</div>
```
*/


.up-1 {
    > * {
        clear: left;
        float: left;
        width: percentage(1/1);
    }
}


.up-2 {
    > * {
        clear: none;
        float: left;
        width: percentage(1/2);
        &:nth-child(odd) {
            clear: left;
        }
    }
}

.up-2--small {
    > * {
        clear: none;

        @include respond-to(small) {
            clear: none;
            float: left;
            width: percentage(1/2);
            &:nth-child(odd) {
                clear: left;
            }
        }
    }
}

.up-3--medium {
    > * {
        @include respond-to(medium) {
            clear: none;
            float: left;
            width: percentage(1/3);

            &:nth-child(odd) {
                clear: none;
            }
            
            &:nth-child(3n+1) {
                clear: left;
            }
        }
    }
}